#!/usr/bin/env python
import sys
import os
import subprocess

pylib_dir = os.environ['_DEVOPS_ROOT'] + "/share/devops/"
sys.path.insert(0, pylib_dir)
import devop_config

CONFIG = devop_config.config()

def show_logs():
    log_files=('/var/log/apache2/access.log',
           '/var/log/apache2/error.log')

    for lf in log_files:
        ssh_cmd('tail -n 50 {0}'.format(lf))

def apache_start():
    ssh_cmd('sudo service apache2 start')

def apache_stop():
    ssh_cmd('sudo service apache2 stop')

def apache_restart():
    ssh_cmd('sudo service apache2 restart')

def apache_reload():
    ssh_cmd('sudo service apache2 reload')


def test():
    ssh_cmd('curl http://localhost:80')

def ssh_cmd(shell_cmd):

    print("{0}\n----------------------".format(shell_cmd))
    host = CONFIG.get('server','host')
    print("got host {}".format(host))
    if host != 'localhost':
        print subprocess.check_output(
            "ssh {host} -l ubuntu {cmd}".format(host=host,cmd=shell_cmd),
            stderr=subprocess.STDOUT,
            shell=True)
    else:
        print subprocess.check_output(
            "{cmd}".format(cmd=shell_cmd),
            stderr=subprocess.STDOUT,
            shell=True)

def main():
    if len(sys.argv) < 2:
        print("Not enough arguments")
        sys.exit(1)

    switcher = {
        'start': apache_start,
        'stop' : apache_stop,
        'restart': apache_restart,
        'reload':apache_reload,
        'logs' : show_logs,
        'test' : test,

    }

    if sys.argv[1] not in switcher.keys():
        print("command not valid")
        sys.exit(1)

    func = switcher.get(sys.argv[1].strip(), lambda: "nothing")

    func()

if __name__ == "__main__":
	main()
